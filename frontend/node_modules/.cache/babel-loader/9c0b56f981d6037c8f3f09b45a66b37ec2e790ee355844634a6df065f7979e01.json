{"ast":null,"code":"var _jsxFileName = \"/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/components/steps/Rest.jsx\";\nimport PropTypes from \"prop-types\";\nimport { IoArrowBackCircleSharp } from \"react-icons/io5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Rest = _ref => {\n  let {\n    next,\n    prev,\n    selectedWorkout,\n    setSelectedWorkout,\n    completedWorkouts,\n    setCompletedWorkouts,\n    currentWorkoutSets,\n    setCurrentWorkoutSets,\n    isCardio,\n    setIsCardio,\n    restTime\n  } = _ref;\n  console.log(selectedWorkout, completedWorkouts, currentWorkoutSets, isCardio, restTime);\n  const returnToThirdStep = () => {\n    console.log(next, prev, selectedWorkout, setSelectedWorkout, completedWorkouts, setCompletedWorkouts, currentWorkoutSets, setCurrentWorkoutSets, setIsCardio);\n    if (isCardio) {\n      setIsCardio(false);\n    }\n    prev();\n  };\n  const completeWorkout = () => {\n    if (isCardio) {\n      setIsCardio(false);\n    }\n\n    // update completedWorkouts state array\n    const updatedCompletedWorkouts = completedWorkouts.map((val, indx) => {\n      if (indx === selectedWorkout.index) {\n        return true;\n      }\n      return val;\n    });\n    setCompletedWorkouts(updatedCompletedWorkouts);\n    // update selectedWorkout object\n    // setSelectedWorkout(null);\n    // update currentWorkoutSets\n    setCurrentWorkoutSets(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-block pt-5\",\n    children: [\"step 4/6 - rest time + initial\", currentWorkoutSets == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => returnToThirdStep(),\n      className: \"text-start back-hover back-width pb-1\",\n      children: /*#__PURE__*/_jsxDEV(IoArrowBackCircleSharp, {\n        color: \"#EBAA28\",\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: () => completeWorkout(),\n      className: \"fw-bold pb-2\",\n      children: isCardio ? selectedWorkout.name : selectedWorkout.completeWorkoutName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_c = Rest;\nRest.propTypes = {\n  next: PropTypes.func,\n  prev: PropTypes.func,\n  selectedWorkout: PropTypes.object,\n  setSelectedWorkout: PropTypes.func,\n  completedWorkouts: PropTypes.array,\n  setCompletedWorkouts: PropTypes.func,\n  currentWorkoutSets: PropTypes.number,\n  setCurrentWorkoutSets: PropTypes.func,\n  isCardio: PropTypes.bool,\n  setIsCardio: PropTypes.func,\n  restTime: PropTypes.number\n};\nvar _c;\n$RefreshReg$(_c, \"Rest\");","map":{"version":3,"names":["PropTypes","IoArrowBackCircleSharp","jsxDEV","_jsxDEV","Rest","_ref","next","prev","selectedWorkout","setSelectedWorkout","completedWorkouts","setCompletedWorkouts","currentWorkoutSets","setCurrentWorkoutSets","isCardio","setIsCardio","restTime","console","log","returnToThirdStep","completeWorkout","updatedCompletedWorkouts","map","val","indx","index","className","children","onClick","color","size","fileName","_jsxFileName","lineNumber","columnNumber","name","completeWorkoutName","_c","propTypes","func","object","array","number","bool","$RefreshReg$"],"sources":["/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/components/steps/Rest.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { IoArrowBackCircleSharp } from \"react-icons/io5\";\n\nexport const Rest = ({\n  next,\n  prev,\n  selectedWorkout,\n  setSelectedWorkout,\n  completedWorkouts,\n  setCompletedWorkouts,\n  currentWorkoutSets,\n  setCurrentWorkoutSets,\n  isCardio,\n  setIsCardio,\n  restTime,\n}) => {\n  console.log(\n    selectedWorkout,\n    completedWorkouts,\n    currentWorkoutSets,\n    isCardio,\n    restTime\n  );\n  const returnToThirdStep = () => {\n    console.log(\n      next,\n      prev,\n      selectedWorkout,\n      setSelectedWorkout,\n      completedWorkouts,\n      setCompletedWorkouts,\n      currentWorkoutSets,\n      setCurrentWorkoutSets,\n      setIsCardio\n    );\n    if (isCardio) {\n      setIsCardio(false);\n    }\n    prev();\n  };\n\n  const completeWorkout = () => {\n    if (isCardio) {\n      setIsCardio(false);\n    }\n\n    // update completedWorkouts state array\n    const updatedCompletedWorkouts = completedWorkouts.map((val, indx) => {\n      if (indx === selectedWorkout.index) {\n        return true;\n      }\n      return val;\n    });\n    setCompletedWorkouts(updatedCompletedWorkouts);\n    // update selectedWorkout object\n    // setSelectedWorkout(null);\n    // update currentWorkoutSets\n    setCurrentWorkoutSets(0);\n  };\n\n  return (\n    <div className=\"d-block pt-5\">\n      step 4/6 - rest time + initial\n      {currentWorkoutSets == 0 && (\n        <div\n          onClick={() => returnToThirdStep()}\n          className=\"text-start back-hover back-width pb-1\"\n        >\n          <IoArrowBackCircleSharp color=\"#EBAA28\" size={30} />\n        </div>\n      )}\n      <h2 onClick={() => completeWorkout()} className=\"fw-bold pb-2\">\n        {isCardio ? selectedWorkout.name : selectedWorkout.completeWorkoutName}\n      </h2>\n    </div>\n  );\n};\n\nRest.propTypes = {\n  next: PropTypes.func,\n  prev: PropTypes.func,\n  selectedWorkout: PropTypes.object,\n  setSelectedWorkout: PropTypes.func,\n  completedWorkouts: PropTypes.array,\n  setCompletedWorkouts: PropTypes.func,\n  currentWorkoutSets: PropTypes.number,\n  setCurrentWorkoutSets: PropTypes.func,\n  isCardio: PropTypes.bool,\n  setIsCardio: PropTypes.func,\n  restTime: PropTypes.number,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}