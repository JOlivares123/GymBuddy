{"ast":null,"code":"var _jsxFileName = \"/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/steps/TimerMode/TimerMode.jsx\";\nimport PropTypes from \"prop-types\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport \"./TimerMode.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst renderTime = _ref => {\n  let {\n    remainingTime\n  } = _ref;\n  const mins = Math.floor(remainingTime % 3600 / 60);\n  const secs = remainingTime % 60;\n\n  // adding extra 0s where needed\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: `${mins < 10 && \"0\"}${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\nexport const TimerMode = _ref2 => {\n  let {\n    prev,\n    restTimeSecs\n  } = _ref2;\n  // use prev(2) to navigate back to Rest.jsx\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"fw-bold my-5\",\n      children: \"Resting Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n        size: 300,\n        strokeWidth: 16,\n        isPlaying: true,\n        colors: [\"#EB4828\", \"#EB286A\", \"#EBAA28\", \"#6E9887\", \"#386641\"],\n        colorsTime: [restTimeSecs / 4, restTimeSecs / 4 * 3, restTimeSecs / 4 * 2, restTimeSecs / 4, 0],\n        duration: 4,\n        onComplete: () => prev(2),\n        children: renderTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = TimerMode;\nTimerMode.propTypes = {\n  prev: PropTypes.func,\n  restTimeSecs: PropTypes.number\n};\nvar _c;\n$RefreshReg$(_c, \"TimerMode\");","map":{"version":3,"names":["PropTypes","CountdownCircleTimer","jsxDEV","_jsxDEV","Fragment","_Fragment","renderTime","_ref","remainingTime","mins","Math","floor","secs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","TimerMode","_ref2","prev","restTimeSecs","size","strokeWidth","isPlaying","colors","colorsTime","duration","onComplete","_c","propTypes","func","number","$RefreshReg$"],"sources":["/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/steps/TimerMode/TimerMode.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nimport \"./TimerMode.scss\";\n\nconst renderTime = ({ remainingTime }) => {\n  const mins = Math.floor((remainingTime % 3600) / 60);\n  const secs = remainingTime % 60;\n\n  // adding extra 0s where needed\n  return (\n    <div className=\"timer\">\n      <h1>{`${mins < 10 && \"0\"}${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`}</h1>\n    </div>\n  );\n};\n\nexport const TimerMode = ({ prev, restTimeSecs }) => {\n  // use prev(2) to navigate back to Rest.jsx\n  return (\n    <>\n      <h1 className=\"fw-bold my-5\">Resting Time</h1>\n      <div className=\"timer-wrapper\">\n        <CountdownCircleTimer\n          size={300}\n          strokeWidth={16}\n          isPlaying={true}\n          colors={[\"#EB4828\", \"#EB286A\", \"#EBAA28\", \"#6E9887\", \"#386641\"]}\n          colorsTime={[\n            restTimeSecs / 4,\n            (restTimeSecs / 4) * 3,\n            (restTimeSecs / 4) * 2,\n            restTimeSecs / 4,\n            0,\n          ]}\n          duration={4}\n          onComplete={() => prev(2)}\n        >\n          {renderTime}\n        </CountdownCircleTimer>\n      </div>\n    </>\n  );\n};\n\nTimerMode.propTypes = {\n  prev: PropTypes.func,\n  restTimeSecs: PropTypes.number,\n};\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,oBAAoB,QAAQ,8BAA8B;AAEnE,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,UAAU,GAAGC,IAAA,IAAuB;EAAA,IAAtB;IAAEC;EAAc,CAAC,GAAAD,IAAA;EACnC,MAAME,IAAI,GAAGC,IAAI,CAACC,KAAK,CAAEH,aAAa,GAAG,IAAI,GAAI,EAAE,CAAC;EACpD,MAAMI,IAAI,GAAGJ,aAAa,GAAG,EAAE;;EAE/B;EACA,oBACEL,OAAA;IAAKU,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBX,OAAA;MAAAW,QAAA,EAAM,GAAEL,IAAI,GAAG,EAAE,IAAI,GAAI,GAAEA,IAAK,IAAGG,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG,GAAEA,IAAK;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAM;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClE;AAEV,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGC,KAAA,IAA4B;EAAA,IAA3B;IAAEC,IAAI;IAAEC;EAAa,CAAC,GAAAF,KAAA;EAC9C;EACA,oBACEjB,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MAAIU,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC9Cf,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BX,OAAA,CAACF,oBAAoB;QACnBsB,IAAI,EAAE,GAAI;QACVC,WAAW,EAAE,EAAG;QAChBC,SAAS,EAAE,IAAK;QAChBC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAE;QAChEC,UAAU,EAAE,CACVL,YAAY,GAAG,CAAC,EACfA,YAAY,GAAG,CAAC,GAAI,CAAC,EACrBA,YAAY,GAAG,CAAC,GAAI,CAAC,EACtBA,YAAY,GAAG,CAAC,EAChB,CAAC,CACD;QACFM,QAAQ,EAAE,CAAE;QACZC,UAAU,EAAEA,CAAA,KAAMR,IAAI,CAAC,CAAC,CAAE;QAAAP,QAAA,EAEzBR;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACU;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB;EAAA,gBACL;AAEP,CAAC;AAACY,EAAA,GA1BWX,SAAS;AA4BtBA,SAAS,CAACY,SAAS,GAAG;EACpBV,IAAI,EAAErB,SAAS,CAACgC,IAAI;EACpBV,YAAY,EAAEtB,SAAS,CAACiC;AAC1B,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}