{"ast":null,"code":"var _jsxFileName = \"/Users/jacobolivares/Documents/practice/gym_buddy/src/components/GoalDisplay/GoalDisplay.jsx\";\nimport PropTypes from \"prop-types\";\nimport \"./GoalDisplay.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GoalDisplay = _ref => {\n  let {\n    isCardio,\n    goal\n  } = _ref;\n  const convertSecsToMins = () => {\n    if (isCardio) {\n      var secs = goal.duration % 60;\n      var mins = (goal.duration - secs) / 60;\n      console.log(mins, secs);\n      // limit the number of decimal pts shown if any\n      // return parseFloat((goal.duration / 60).toFixed(2));\n      return `${mins} mins ${secs} secs`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GoalContainer\",\n      children: isCardio ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"CardioTitle\",\n          children: \"Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"CardioTime yellow\",\n          children: [convertSecsToMins(), \" mins\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"RepsTitle\",\n          children: \"Reps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"SetsTitle\",\n          children: \"Sets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"WeightTitle\",\n          children: \"Weight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"RepsCol yellow\",\n          children: `${goal.min_reps}-${goal.max_reps}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"SetsCol yellow\",\n          children: goal.sets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"WeightCol yellow\",\n          children: [goal.weight, \" lbs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = GoalDisplay;\nGoalDisplay.propTypes = {\n  isCardio: PropTypes.bool,\n  goal: PropTypes.object\n};\nvar _c;\n$RefreshReg$(_c, \"GoalDisplay\");","map":{"version":3,"names":["PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","GoalDisplay","_ref","isCardio","goal","convertSecsToMins","secs","duration","mins","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","min_reps","max_reps","sets","weight","_c","propTypes","bool","object","$RefreshReg$"],"sources":["/Users/jacobolivares/Documents/practice/gym_buddy/src/components/GoalDisplay/GoalDisplay.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\n\nimport \"./GoalDisplay.scss\";\n\nexport const GoalDisplay = ({ isCardio, goal }) => {\n  const convertSecsToMins = () => {\n    if (isCardio) {\n      var secs = goal.duration % 60;\n      var mins = (goal.duration - secs) / 60;\n      console.log(mins, secs);\n      // limit the number of decimal pts shown if any\n      // return parseFloat((goal.duration / 60).toFixed(2));\n      return `${mins} mins ${secs} secs`;\n    }\n  };\n  return (\n    <div className=\"pt-5\">\n      <div className=\"GoalContainer\">\n        {isCardio ? (\n          <>\n            <h5 className=\"CardioTitle\">Duration</h5>\n            <h2 className=\"CardioTime yellow\">{convertSecsToMins()} mins</h2>\n          </>\n        ) : (\n          <>\n            <h5 className=\"RepsTitle\">Reps</h5>\n            <h5 className=\"SetsTitle\">Sets</h5>\n            <h5 className=\"WeightTitle\">Weight</h5>\n            <h2 className=\"RepsCol yellow\">{`${goal.min_reps}-${goal.max_reps}`}</h2>\n            <h2 className=\"SetsCol yellow\">{goal.sets}</h2>\n            <h2 className=\"WeightCol yellow\">{goal.weight} lbs</h2>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nGoalDisplay.propTypes = {\n  isCardio: PropTypes.bool,\n  goal: PropTypes.object,\n};\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAElC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,OAAO,MAAMC,WAAW,GAAGC,IAAA,IAAwB;EAAA,IAAvB;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAAF,IAAA;EAC5C,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIF,QAAQ,EAAE;MACZ,IAAIG,IAAI,GAAGF,IAAI,CAACG,QAAQ,GAAG,EAAE;MAC7B,IAAIC,IAAI,GAAG,CAACJ,IAAI,CAACG,QAAQ,GAAGD,IAAI,IAAI,EAAE;MACtCG,OAAO,CAACC,GAAG,CAACF,IAAI,EAAEF,IAAI,CAAC;MACvB;MACA;MACA,OAAQ,GAAEE,IAAK,SAAQF,IAAK,OAAM;IACpC;EACF,CAAC;EACD,oBACER,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBd,OAAA;MAAKa,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BT,QAAQ,gBACPL,OAAA,CAAAE,SAAA;QAAAY,QAAA,gBACEd,OAAA;UAAIa,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACzClB,OAAA;UAAIa,SAAS,EAAC,mBAAmB;UAAAC,QAAA,GAAEP,iBAAiB,EAAE,EAAC,OAAK;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA,gBAChE,gBAEHlB,OAAA,CAAAE,SAAA;QAAAY,QAAA,gBACEd,OAAA;UAAIa,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACnClB,OAAA;UAAIa,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACnClB,OAAA;UAAIa,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACvClB,OAAA;UAAIa,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAG,GAAER,IAAI,CAACa,QAAS,IAAGb,IAAI,CAACc,QAAS;QAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACzElB,OAAA;UAAIa,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAER,IAAI,CAACe;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAC/ClB,OAAA;UAAIa,SAAS,EAAC,kBAAkB;UAAAC,QAAA,GAAER,IAAI,CAACgB,MAAM,EAAC,MAAI;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA;IAE1D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACK,EAAA,GAhCWpB,WAAW;AAkCxBA,WAAW,CAACqB,SAAS,GAAG;EACtBnB,QAAQ,EAAEP,SAAS,CAAC2B,IAAI;EACxBnB,IAAI,EAAER,SAAS,CAAC4B;AAClB,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}