{"ast":null,"code":"var _jsxFileName = \"/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/components/steps/SelectProgram.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from \"prop-types\";\nimport { IoArrowBackCircleSharp } from \"react-icons/io5\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Carousel, CustButton, WorkoutTile } from \"./../../../../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectProgram = _ref => {\n  _s();\n  let {\n    myPrograms,\n    next,\n    selectProgram,\n    setSelectedProgramDayTitles\n  } = _ref;\n  const navigate = useNavigate();\n  //handles logic to navigate home is back button pressed\n  const returnHome = () => {\n    navigate(\"/home\");\n  };\n  // handles logic for continuing flow\n  const continueToSecondStep = (programId, muscles) => {\n    selectProgram(programId);\n    next();\n    // save titles to use in second step\n    setSelectedProgramDayTitles(muscles);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-block pt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => returnHome(),\n      className: \"text-start back-hover back-width pb-1\",\n      children: /*#__PURE__*/_jsxDEV(IoArrowBackCircleSharp, {\n        color: \"#EBAA28\",\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"fw-bold pb-4\",\n      children: \"Select Workout Program\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n      children: myPrograms.map(program => {\n        var muscles = program.days.map(day => {\n          return day.workouts_needed.flatMap(wo => {\n            return wo.muscles_worked;\n          });\n        });\n        // extract all unique values of muscles worked out to display\n        muscles = muscles.map(group => {\n          return Array.from(new Set(group));\n        });\n        //   join every list inside muscles to make one string\n        muscles = muscles.map((group, indx) => {\n          var musclesJoined = group.join(\", \");\n          // append copy\n          return `Day ${indx + 1}: ${musclesJoined}`;\n        });\n        return (\n          /*#__PURE__*/\n          // <div className=\"d-flex justify-content-center\" >\n          _jsxDEV(WorkoutTile, {\n            title: program.name,\n            items: muscles,\n            showEdit: true,\n            onClick: () => continueToSecondStep(program.id, muscles)\n          }, program.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n          // </div>\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(CustButton, {\n        text: \"Create New Program\",\n        color: \"yellow\",\n        className: \"mt-5 btn-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectProgram, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = SelectProgram;\nSelectProgram.propTypes = {\n  myPrograms: PropTypes.arrayOf(PropTypes.object),\n  next: PropTypes.func,\n  selectProgram: PropTypes.func,\n  setSelectedProgramDayTitles: PropTypes.func\n};\nvar _c;\n$RefreshReg$(_c, \"SelectProgram\");","map":{"version":3,"names":["PropTypes","IoArrowBackCircleSharp","useNavigate","Carousel","CustButton","WorkoutTile","jsxDEV","_jsxDEV","SelectProgram","_ref","_s","myPrograms","next","selectProgram","setSelectedProgramDayTitles","navigate","returnHome","continueToSecondStep","programId","muscles","className","children","onClick","color","size","fileName","_jsxFileName","lineNumber","columnNumber","map","program","days","day","workouts_needed","flatMap","wo","muscles_worked","group","Array","from","Set","indx","musclesJoined","join","title","name","items","showEdit","id","text","_c","propTypes","arrayOf","object","func","$RefreshReg$"],"sources":["/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/components/steps/SelectProgram.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { IoArrowBackCircleSharp } from \"react-icons/io5\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Carousel, CustButton, WorkoutTile } from \"./../../../../components\";\n\nexport const SelectProgram = ({\n  myPrograms,\n  next,\n  selectProgram,\n  setSelectedProgramDayTitles,\n}) => {\n  const navigate = useNavigate();\n  //handles logic to navigate home is back button pressed\n  const returnHome = () => {\n    navigate(\"/home\");\n  };\n  // handles logic for continuing flow\n  const continueToSecondStep = (programId, muscles) => {\n    selectProgram(programId);\n    next();\n    // save titles to use in second step\n    setSelectedProgramDayTitles(muscles);\n  };\n\n  return (\n    <div className=\"d-block pt-5\">\n      <div\n        onClick={() => returnHome()}\n        className=\"text-start back-hover back-width pb-1\"\n      >\n        <IoArrowBackCircleSharp color=\"#EBAA28\" size={30} />\n      </div>\n      <h2 className=\"fw-bold pb-4\">Select Workout Program</h2>\n      <br />\n      <Carousel>\n        {myPrograms.map((program) => {\n          var muscles = program.days.map((day) => {\n            return day.workouts_needed.flatMap((wo) => {\n              return wo.muscles_worked;\n            });\n          });\n          // extract all unique values of muscles worked out to display\n          muscles = muscles.map((group) => {\n            return Array.from(new Set(group));\n          });\n          //   join every list inside muscles to make one string\n          muscles = muscles.map((group, indx) => {\n            var musclesJoined = group.join(\", \");\n            // append copy\n            return `Day ${indx + 1}: ${musclesJoined}`;\n          });\n\n          return (\n            // <div className=\"d-flex justify-content-center\" >\n            <WorkoutTile\n              key={program.id}\n              title={program.name}\n              items={muscles}\n              showEdit={true}\n              onClick={() => continueToSecondStep(program.id, muscles)}\n            />\n            // </div>\n          );\n        })}\n      </Carousel>\n      <div className=\"mt-5\">\n        <CustButton\n          text=\"Create New Program\"\n          color=\"yellow\"\n          className=\"mt-5 btn-lg\"\n        />\n      </div>\n    </div>\n  );\n};\n\nSelectProgram.propTypes = {\n  myPrograms: PropTypes.arrayOf(PropTypes.object),\n  next: PropTypes.func,\n  selectProgram: PropTypes.func,\n  setSelectedProgramDayTitles: PropTypes.func,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}