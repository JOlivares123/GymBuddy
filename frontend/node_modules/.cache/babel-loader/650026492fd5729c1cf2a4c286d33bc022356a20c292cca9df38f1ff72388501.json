{"ast":null,"code":"var _jsxFileName = \"/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/components/steps/SelectDay.jsx\";\nimport PropTypes from \"prop-types\";\nimport { IoArrowBackCircleSharp } from \"react-icons/io5\";\nimport { Carousel, WorkoutTile } from \"../../../../components\";\nimport \"./SelectDay.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectDay = _ref => {\n  let {\n    program,\n    next,\n    prev,\n    setSelectedProgram,\n    selectedProgramDayTitles,\n    setSelectedProgramDayTitles,\n    setSelectedDay,\n    setCompletedWorkouts\n  } = _ref;\n  const {\n    days\n  } = program;\n  const returnToFirstStep = () => {\n    // update step, selectedProgramDayTitles, selectedProgram state\n    prev();\n    setSelectedProgram(null);\n    setSelectedProgramDayTitles([]);\n  };\n  const continueToThirdStep = (dayId, tileTitle) => {\n    var _selected$cardio;\n    var selected = days.filter(day => {\n      return day.id === dayId;\n    }).pop();\n\n    // add tileTitle to selected var so I can easily access it in the 3rd step\n    var colonIndx = tileTitle.indexOf(\":\");\n    // add 2 to remove the ': ' chars from tileTitle\n    selected.dayTitle = tileTitle.slice(colonIndx + 2);\n    setSelectedDay(selected);\n    // update completedWorkouts state var to be an array filed with false\n    var falses = [];\n    for (var i = 0; i < selected.workouts_needed.length; i++) {\n      falses.push(false);\n    }\n    if (selected !== null && selected !== void 0 && (_selected$cardio = selected.cardio) !== null && _selected$cardio !== void 0 && _selected$cardio.name) {\n      falses.push(false);\n    }\n    setCompletedWorkouts(falses);\n    next();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-block pt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => returnToFirstStep(),\n      className: \"text-start back-hover back-width pb-1\",\n      children: /*#__PURE__*/_jsxDEV(IoArrowBackCircleSharp, {\n        color: \"#EBAA28\",\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"fw-bold pb-2\",\n      children: \" Select Day \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"fw-bold pb-4 yellow\",\n      children: program.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n      children: days.map((day, indx) => {\n        var _day$cardio;\n        const {\n          workouts_needed\n        } = day;\n\n        // join workouts_needed into a string instead of array\n        const tileItems = workouts_needed.map(wo => {\n          return wo.workout_name.length > 1 ? wo.workout_name.join(\" + \") : wo.workout_name[0];\n        });\n\n        // check if cardio is present and if it is, append it to tile_items\n        if (day !== null && day !== void 0 && (_day$cardio = day.cardio) !== null && _day$cardio !== void 0 && _day$cardio.name) {\n          tileItems.push(`Cardio: ${day.cardio.name}`);\n        }\n        const tileTitle = selectedProgramDayTitles[indx];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(WorkoutTile, {\n            title: tileTitle,\n            items: tileItems,\n            onClick: () => continueToThirdStep(day.id, tileTitle)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, day.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c = SelectDay;\nSelectDay.propTypes = {\n  program: PropTypes.object,\n  next: PropTypes.func,\n  prev: PropTypes.func,\n  setSelectedProgram: PropTypes.func,\n  selectedProgramDayTitles: PropTypes.arrayOf(PropTypes.string),\n  setSelectedProgramDayTitles: PropTypes.func,\n  setSelectedDay: PropTypes.func,\n  setCompletedWorkouts: PropTypes.func\n};\nvar _c;\n$RefreshReg$(_c, \"SelectDay\");","map":{"version":3,"names":["PropTypes","IoArrowBackCircleSharp","Carousel","WorkoutTile","jsxDEV","_jsxDEV","SelectDay","_ref","program","next","prev","setSelectedProgram","selectedProgramDayTitles","setSelectedProgramDayTitles","setSelectedDay","setCompletedWorkouts","days","returnToFirstStep","continueToThirdStep","dayId","tileTitle","_selected$cardio","selected","filter","day","id","pop","colonIndx","indexOf","dayTitle","slice","falses","i","workouts_needed","length","push","cardio","name","className","children","onClick","color","size","fileName","_jsxFileName","lineNumber","columnNumber","map","indx","_day$cardio","tileItems","wo","workout_name","join","title","items","_c","propTypes","object","func","arrayOf","string","$RefreshReg$"],"sources":["/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/components/steps/SelectDay.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { IoArrowBackCircleSharp } from \"react-icons/io5\";\n\nimport { Carousel, WorkoutTile } from \"../../../../components\";\nimport \"./SelectDay.scss\";\n\nexport const SelectDay = ({\n  program,\n  next,\n  prev,\n  setSelectedProgram,\n  selectedProgramDayTitles,\n  setSelectedProgramDayTitles,\n  setSelectedDay,\n  setCompletedWorkouts,\n}) => {\n  const { days } = program;\n\n  const returnToFirstStep = () => {\n    // update step, selectedProgramDayTitles, selectedProgram state\n    prev();\n    setSelectedProgram(null);\n    setSelectedProgramDayTitles([]);\n  };\n\n  const continueToThirdStep = (dayId, tileTitle) => {\n    var selected = days\n      .filter((day) => {\n        return day.id === dayId;\n      })\n      .pop();\n\n    // add tileTitle to selected var so I can easily access it in the 3rd step\n    var colonIndx = tileTitle.indexOf(\":\");\n    // add 2 to remove the ': ' chars from tileTitle\n    selected.dayTitle = tileTitle.slice(colonIndx + 2);\n    setSelectedDay(selected);\n    // update completedWorkouts state var to be an array filed with false\n    var falses = [];\n    for (var i = 0; i < selected.workouts_needed.length; i++) {\n      falses.push(false);\n    }\n    if (selected?.cardio?.name) {\n      falses.push(false);\n    }\n    setCompletedWorkouts(falses);\n    next();\n  };\n  return (\n    <div className=\"d-block pt-5\">\n      <div\n        onClick={() => returnToFirstStep()}\n        className=\"text-start back-hover back-width pb-1\"\n      >\n        <IoArrowBackCircleSharp color=\"#EBAA28\" size={30} />\n      </div>\n      <h2 className=\"fw-bold pb-2\"> Select Day </h2>\n      <h3 className=\"fw-bold pb-4 yellow\">{program.name}</h3>\n      <br />\n      <Carousel>\n        {days.map((day, indx) => {\n          const { workouts_needed } = day;\n\n          // join workouts_needed into a string instead of array\n          const tileItems = workouts_needed.map((wo) => {\n            return wo.workout_name.length > 1\n              ? wo.workout_name.join(\" + \")\n              : wo.workout_name[0];\n          });\n\n          // check if cardio is present and if it is, append it to tile_items\n          if (day?.cardio?.name) {\n            tileItems.push(`Cardio: ${day.cardio.name}`);\n          }\n\n          const tileTitle = selectedProgramDayTitles[indx];\n          return (\n            <div className=\"d-flex justify-content-center\" key={day.id}>\n              <WorkoutTile\n                title={tileTitle}\n                items={tileItems}\n                onClick={() => continueToThirdStep(day.id, tileTitle)}\n              />\n            </div>\n          );\n        })}\n      </Carousel>\n    </div>\n  );\n};\n\nSelectDay.propTypes = {\n  program: PropTypes.object,\n  next: PropTypes.func,\n  prev: PropTypes.func,\n  setSelectedProgram: PropTypes.func,\n  selectedProgramDayTitles: PropTypes.arrayOf(PropTypes.string),\n  setSelectedProgramDayTitles: PropTypes.func,\n  setSelectedDay: PropTypes.func,\n  setCompletedWorkouts: PropTypes.func,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}