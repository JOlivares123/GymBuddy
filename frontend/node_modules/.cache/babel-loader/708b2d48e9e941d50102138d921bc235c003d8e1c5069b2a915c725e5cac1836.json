{"ast":null,"code":"var _jsxFileName = \"/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/components/steps/SelectDay.jsx\";\nimport PropTypes from \"prop-types\";\nimport { IoArrowBackCircleSharp } from \"react-icons/io5\";\nimport { Carousel, WorkoutTile } from \"../../../../components\";\nimport \"./SelectDay.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectDay = _ref => {\n  let {\n    program,\n    next,\n    prev,\n    setSelectedProgram,\n    selectedProgramDayTitles,\n    setSelectedProgramDayTitles,\n    setSelectedDay,\n    setCompletedWorkouts\n  } = _ref;\n  const {\n    days\n  } = program;\n  const returnToFirstStep = () => {\n    // update step, selectedProgramDayTitles, selectedProgram state\n    prev();\n    setSelectedProgram(null);\n    setSelectedProgramDayTitles([]);\n  };\n  const addIsDoneAttr = selectedDay => {\n    var _selectedDay$cardio;\n    // add new attribute to selectedDay var\n    for (var indx in selectedDay.workouts_needed) {\n      var item = selectedDay.workouts_needed[indx];\n      item.isDone = false;\n    }\n\n    // add isDone attribute to cardio object if present\n    // will always use 0th index for cardio\n    if ((_selectedDay$cardio = selectedDay.cardio) !== null && _selectedDay$cardio !== void 0 && _selectedDay$cardio.name) {\n      selectedDay.cardio.isDone = false;\n    }\n  };\n  const continueToThirdStep = (dayId, tileTitle) => {\n    var _selected$cardio;\n    var selected = days.filter(day => {\n      return day.id === dayId;\n    }).pop();\n\n    // add tileTitle to selected var so I can easily access it in the 3rd step\n    var colonIndx = tileTitle.indexOf(\":\");\n    // add 2 to remove the ': ' chars from tileTitle\n    selected.dayTitle = tileTitle.slice(colonIndx + 2);\n\n    // update completedWorkouts state var to be an array filled with false\n    var falses = [];\n    for (var i = 0; i < selected.workouts_needed.length; i++) {\n      falses.push(false);\n    }\n    if (selected !== null && selected !== void 0 && (_selected$cardio = selected.cardio) !== null && _selected$cardio !== void 0 && _selected$cardio.name) {\n      falses.push(false);\n    }\n    setCompletedWorkouts(falses);\n\n    // add new attributes and set selectedDay var\n    addIsDoneAttr(selected);\n    setSelectedDay(selected);\n    next();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-block pt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => returnToFirstStep(),\n      className: \"text-start back-hover back-width pb-1\",\n      children: /*#__PURE__*/_jsxDEV(IoArrowBackCircleSharp, {\n        color: \"#EBAA28\",\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"fw-bold pb-2\",\n      children: \" Select Day \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"fw-bold pb-4 yellow\",\n      children: program.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n      children: days.map((day, indx) => {\n        var _day$cardio;\n        const {\n          workouts_needed\n        } = day;\n\n        // extract titles\n        const tileItems = workouts_needed.map(wo => {\n          return wo.workout_name;\n        });\n\n        // check if cardio is present and if it is, append it to tile_items\n        if (day !== null && day !== void 0 && (_day$cardio = day.cardio) !== null && _day$cardio !== void 0 && _day$cardio.name) {\n          tileItems.unshift(`Cardio: ${day.cardio.name}`);\n        }\n        const tileTitle = selectedProgramDayTitles[indx];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(WorkoutTile, {\n            title: tileTitle,\n            items: tileItems,\n            onClick: () => continueToThirdStep(day.id, tileTitle)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, day.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c = SelectDay;\nSelectDay.propTypes = {\n  program: PropTypes.object,\n  next: PropTypes.func,\n  prev: PropTypes.func,\n  setSelectedProgram: PropTypes.func,\n  selectedProgramDayTitles: PropTypes.arrayOf(PropTypes.string),\n  setSelectedProgramDayTitles: PropTypes.func,\n  setSelectedDay: PropTypes.func,\n  setCompletedWorkouts: PropTypes.func\n};\nvar _c;\n$RefreshReg$(_c, \"SelectDay\");","map":{"version":3,"names":["PropTypes","IoArrowBackCircleSharp","Carousel","WorkoutTile","jsxDEV","_jsxDEV","SelectDay","_ref","program","next","prev","setSelectedProgram","selectedProgramDayTitles","setSelectedProgramDayTitles","setSelectedDay","setCompletedWorkouts","days","returnToFirstStep","addIsDoneAttr","selectedDay","_selectedDay$cardio","indx","workouts_needed","item","isDone","cardio","name","continueToThirdStep","dayId","tileTitle","_selected$cardio","selected","filter","day","id","pop","colonIndx","indexOf","dayTitle","slice","falses","i","length","push","className","children","onClick","color","size","fileName","_jsxFileName","lineNumber","columnNumber","map","_day$cardio","tileItems","wo","workout_name","unshift","title","items","_c","propTypes","object","func","arrayOf","string","$RefreshReg$"],"sources":["/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/components/steps/SelectDay.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { IoArrowBackCircleSharp } from \"react-icons/io5\";\n\nimport { Carousel, WorkoutTile } from \"../../../../components\";\nimport \"./SelectDay.scss\";\n\nexport const SelectDay = ({\n  program,\n  next,\n  prev,\n  setSelectedProgram,\n  selectedProgramDayTitles,\n  setSelectedProgramDayTitles,\n  setSelectedDay,\n  setCompletedWorkouts,\n}) => {\n  const { days } = program;\n\n  const returnToFirstStep = () => {\n    // update step, selectedProgramDayTitles, selectedProgram state\n    prev();\n    setSelectedProgram(null);\n    setSelectedProgramDayTitles([]);\n  };\n\n  const addIsDoneAttr = (selectedDay) => {\n    // add new attribute to selectedDay var\n    for (var indx in selectedDay.workouts_needed) {\n      var item = selectedDay.workouts_needed[indx];\n      item.isDone = false;\n    }\n\n    // add isDone attribute to cardio object if present\n    // will always use 0th index for cardio\n    if (selectedDay.cardio?.name) {\n      selectedDay.cardio.isDone = false;\n    }\n  };\n\n  const continueToThirdStep = (dayId, tileTitle) => {\n    var selected = days\n      .filter((day) => {\n        return day.id === dayId;\n      })\n      .pop();\n\n    // add tileTitle to selected var so I can easily access it in the 3rd step\n    var colonIndx = tileTitle.indexOf(\":\");\n    // add 2 to remove the ': ' chars from tileTitle\n    selected.dayTitle = tileTitle.slice(colonIndx + 2);\n\n    // update completedWorkouts state var to be an array filled with false\n    var falses = [];\n    for (var i = 0; i < selected.workouts_needed.length; i++) {\n      falses.push(false);\n    }\n    if (selected?.cardio?.name) {\n      falses.push(false);\n    }\n    setCompletedWorkouts(falses);\n\n    // add new attributes and set selectedDay var\n    addIsDoneAttr(selected);\n    setSelectedDay(selected);\n\n    next();\n  };\n  return (\n    <div className=\"d-block pt-5\">\n      <div\n        onClick={() => returnToFirstStep()}\n        className=\"text-start back-hover back-width pb-1\"\n      >\n        <IoArrowBackCircleSharp color=\"#EBAA28\" size={30} />\n      </div>\n      <h2 className=\"fw-bold pb-2\"> Select Day </h2>\n      <h3 className=\"fw-bold pb-4 yellow\">{program.name}</h3>\n      <br />\n      <Carousel>\n        {days.map((day, indx) => {\n          const { workouts_needed } = day;\n\n          // extract titles\n          const tileItems = workouts_needed.map((wo) => {\n            return wo.workout_name;\n          });\n\n          // check if cardio is present and if it is, append it to tile_items\n          if (day?.cardio?.name) {\n            tileItems.unshift(`Cardio: ${day.cardio.name}`);\n          }\n\n          const tileTitle = selectedProgramDayTitles[indx];\n          return (\n            <div className=\"d-flex justify-content-center\" key={day.id}>\n              <WorkoutTile\n                title={tileTitle}\n                items={tileItems}\n                onClick={() => continueToThirdStep(day.id, tileTitle)}\n              />\n            </div>\n          );\n        })}\n      </Carousel>\n    </div>\n  );\n};\n\nSelectDay.propTypes = {\n  program: PropTypes.object,\n  next: PropTypes.func,\n  prev: PropTypes.func,\n  setSelectedProgram: PropTypes.func,\n  selectedProgramDayTitles: PropTypes.arrayOf(PropTypes.string),\n  setSelectedProgramDayTitles: PropTypes.func,\n  setSelectedDay: PropTypes.func,\n  setCompletedWorkouts: PropTypes.func,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}