{"ast":null,"code":"var _jsxFileName = \"/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/WorkoutPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { PerformWorkout, Rest, SelectDay, SelectProgram, SelectWorkout } from \"./components\";\n// mock data until backend is built\nimport { data } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const WorkoutPage = _ref => {\n  _s();\n  let {\n    programs = data.programs\n  } = _ref;\n  const [step, setStep] = useState(1);\n  // used to keep track how many sets have been performed throughout workout\n  // const [numSets, setNumSets] = useState(0);\n  const [selectedProgram, setSelectedProgram] = useState(null);\n  // gets set in 1st step then used(read) in second step.\n  const [selectedProgramDayTitles, setSelectedProgramDayTitles] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [selectedWorkout, setSelectedWorkout] = useState(null);\n  const [currentWorkoutSets, setCurrentWorkoutSets] = useState(0);\n  const [completedWorkouts, setCompletedWorkouts] = useState([]);\n  const [isCardio, setIsCardio] = useState(false);\n  const selectProgram = programId => {\n    var selected = programs.filter(program => {\n      return program.id === programId;\n    }).pop();\n    setSelectedProgram(selected);\n  };\n  const nextStep = () => {\n    setStep(step + 1);\n  };\n  const prevStep = () => {\n    if (step > 1) {\n      setStep(step - 1);\n    }\n  };\n  console.log(selectedWorkout);\n  const renderCurrentStep = () => {\n    switch (step) {\n      case 1:\n        return /*#__PURE__*/_jsxDEV(SelectProgram, {\n          next: nextStep,\n          selectProgram: selectProgram,\n          myPrograms: programs,\n          setSelectedProgramDayTitles: setSelectedProgramDayTitles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(SelectDay, {\n          program: selectedProgram,\n          setSelectedProgram: setSelectedProgram,\n          next: nextStep,\n          prev: prevStep,\n          selectedProgramDayTitles: selectedProgramDayTitles,\n          setSelectedProgramDayTitles: setSelectedProgramDayTitles,\n          setSelectedDay: setSelectedDay,\n          setCompletedWorkouts: setCompletedWorkouts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this);\n      case 3:\n        return /*#__PURE__*/_jsxDEV(SelectWorkout, {\n          selectedDay: selectedDay,\n          next: nextStep,\n          prev: prevStep,\n          completedWorkouts: completedWorkouts,\n          setCompletedWorkouts: setCompletedWorkouts,\n          setSelectedDay: setSelectedDay,\n          selectedWorkout: selectedWorkout,\n          setSelectedWorkout: setSelectedWorkout,\n          setIsCardio: setIsCardio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this);\n      case 4:\n        return /*#__PURE__*/_jsxDEV(Rest, {\n          next: nextStep,\n          prev: prevStep,\n          selectedWorkout: selectedWorkout,\n          completedWorkouts: completedWorkouts,\n          setCompletedWorkouts: setCompletedWorkouts,\n          currentWorkoutSets: currentWorkoutSets,\n          setCurrentWorkoutSets: setCurrentWorkoutSets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this);\n      case 5:\n        return /*#__PURE__*/_jsxDEV(PerformWorkout, {\n          next: nextStep,\n          prev: prevStep,\n          step: step\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }, this);\n      default:\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderCurrentStep(programs)\n  }, void 0, false);\n};\n_s(WorkoutPage, \"ag5ZKsym5sn82ivsTMIcBlXNW4g=\");\n_c = WorkoutPage;\nWorkoutPage.propTypes = {\n  programs: PropTypes.array\n};\nvar _c;\n$RefreshReg$(_c, \"WorkoutPage\");","map":{"version":3,"names":["useState","PropTypes","PerformWorkout","Rest","SelectDay","SelectProgram","SelectWorkout","data","jsxDEV","_jsxDEV","Fragment","_Fragment","WorkoutPage","_ref","_s","programs","step","setStep","selectedProgram","setSelectedProgram","selectedProgramDayTitles","setSelectedProgramDayTitles","selectedDay","setSelectedDay","selectedWorkout","setSelectedWorkout","currentWorkoutSets","setCurrentWorkoutSets","completedWorkouts","setCompletedWorkouts","isCardio","setIsCardio","selectProgram","programId","selected","filter","program","id","pop","nextStep","prevStep","console","log","renderCurrentStep","next","myPrograms","fileName","_jsxFileName","lineNumber","columnNumber","prev","children","_c","propTypes","array","$RefreshReg$"],"sources":["/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/WorkoutPage.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  PerformWorkout,\n  Rest,\n  SelectDay,\n  SelectProgram,\n  SelectWorkout,\n} from \"./components\";\n// mock data until backend is built\nimport { data } from \"./data\";\n\nexport const WorkoutPage = ({ programs = data.programs }) => {\n  const [step, setStep] = useState(1);\n  // used to keep track how many sets have been performed throughout workout\n  // const [numSets, setNumSets] = useState(0);\n  const [selectedProgram, setSelectedProgram] = useState(null);\n  // gets set in 1st step then used(read) in second step.\n  const [selectedProgramDayTitles, setSelectedProgramDayTitles] = useState([]);\n  const [selectedDay, setSelectedDay] = useState(null);\n  const [selectedWorkout, setSelectedWorkout] = useState(null);\n  const [currentWorkoutSets, setCurrentWorkoutSets] = useState(0);\n  const [completedWorkouts, setCompletedWorkouts] = useState([]);\n  const [isCardio, setIsCardio] = useState(false);\n\n  const selectProgram = (programId) => {\n    var selected = programs\n      .filter((program) => {\n        return program.id === programId;\n      })\n      .pop();\n\n    setSelectedProgram(selected);\n  };\n\n  const nextStep = () => {\n    setStep(step + 1);\n  };\n\n  const prevStep = () => {\n    if (step > 1) {\n      setStep(step - 1);\n    }\n  };\n  console.log(selectedWorkout);\n\n  const renderCurrentStep = () => {\n    switch (step) {\n      case 1:\n        return (\n          <SelectProgram\n            next={nextStep}\n            selectProgram={selectProgram}\n            myPrograms={programs}\n            setSelectedProgramDayTitles={setSelectedProgramDayTitles}\n          />\n        );\n      case 2:\n        return (\n          <SelectDay\n            program={selectedProgram}\n            setSelectedProgram={setSelectedProgram}\n            next={nextStep}\n            prev={prevStep}\n            selectedProgramDayTitles={selectedProgramDayTitles}\n            setSelectedProgramDayTitles={setSelectedProgramDayTitles}\n            setSelectedDay={setSelectedDay}\n            setCompletedWorkouts={setCompletedWorkouts}\n          />\n        );\n      case 3:\n        return (\n          <SelectWorkout\n            selectedDay={selectedDay}\n            next={nextStep}\n            prev={prevStep}\n            completedWorkouts={completedWorkouts}\n            setCompletedWorkouts={setCompletedWorkouts}\n            setSelectedDay={setSelectedDay}\n            selectedWorkout={selectedWorkout}\n            setSelectedWorkout={setSelectedWorkout}\n            setIsCardio={setIsCardio}\n          />\n        );\n      case 4:\n        return (\n          <Rest\n            next={nextStep}\n            prev={prevStep}\n            selectedWorkout={selectedWorkout}\n            completedWorkouts={completedWorkouts}\n            setCompletedWorkouts={setCompletedWorkouts}\n            currentWorkoutSets={currentWorkoutSets}\n            setCurrentWorkoutSets={setCurrentWorkoutSets}\n          />\n        );\n      case 5:\n        return <PerformWorkout next={nextStep} prev={prevStep} step={step} />;\n      default:\n    }\n  };\n  return <>{renderCurrentStep(programs)}</>;\n};\n\nWorkoutPage.propTypes = {\n  programs: PropTypes.array,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}