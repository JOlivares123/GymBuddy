{"ast":null,"code":"var _jsxFileName = \"/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/steps/SelectWorkout/SelectWorkout.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from \"prop-types\";\nimport { useNavigate } from \"react-router\";\nimport { CustButton, WorkoutItem, BackArrow } from \"../../../../components\";\nimport { confettiEffect } from \"./Confetti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARDIO_INDEX = 0;\nexport const SelectWorkout = _ref => {\n  _s();\n  var _selectedDay$cardio;\n  let {\n    selectedDay,\n    next,\n    prev,\n    setSelectedDay,\n    completedWorkouts,\n    setCompletedWorkouts,\n    setSelectedWorkout,\n    setIsCardio\n  } = _ref;\n  const navigate = useNavigate();\n  const returnToSecondStep = () => {\n    // add alert first to make sure\n    if (confirm(\"Are you sure you want to abandon your current workout?\")) {\n      // update step, setSelectedWorkout, setCompletedWorkouts, selectedDay state\n      setSelectedDay(null);\n      setSelectedWorkout(null);\n      setCompletedWorkouts([]);\n      prev();\n    }\n  };\n  const continueToFourthStep = (workoutObj, index, isCardio) => {\n    // update state to denote cardio mode\n    if (isCardio) {\n      setIsCardio(true);\n    }\n    // add index attribute to workoutObj\n    workoutObj.index = index;\n    setSelectedWorkout(workoutObj);\n    next();\n  };\n  const areWorkoutsIncomplete = () => {\n    for (var i = 0; i < completedWorkouts.length; i++) {\n      if (!completedWorkouts[i]) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // once an workout is completed, I should disable the onClick for that WorkoutItem\n  // to avoid the error\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-block pt-5\",\n    children: [/*#__PURE__*/_jsxDEV(BackArrow, {\n      onClick: () => returnToSecondStep()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"fw-bold pb-2\",\n      children: `Today's Workout`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"fw-bold pb-4 yellow\",\n      children: selectedDay.dayTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [(selectedDay === null || selectedDay === void 0 ? void 0 : (_selectedDay$cardio = selectedDay.cardio) === null || _selectedDay$cardio === void 0 ? void 0 : _selectedDay$cardio.name) && /*#__PURE__*/_jsxDEV(WorkoutItem, {\n        itemText: selectedDay.cardio.name,\n        isComplete: completedWorkouts[CARDIO_INDEX],\n        onClick: () => {\n          !completedWorkouts[CARDIO_INDEX] && continueToFourthStep(selectedDay.cardio, CARDIO_INDEX, true);\n        }\n      }, CARDIO_INDEX, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), selectedDay.workouts_needed.map((wo, indx) => {\n        var _selectedDay$cardio2;\n        var workout_name = wo.workout_name;\n        // append concatted workoutNames to object for next step\n        wo.completeWorkoutName = workout_name;\n        var workoutIndx = selectedDay !== null && selectedDay !== void 0 && (_selectedDay$cardio2 = selectedDay.cardio) !== null && _selectedDay$cardio2 !== void 0 && _selectedDay$cardio2.name ? indx + 1 : indx;\n        return /*#__PURE__*/_jsxDEV(WorkoutItem, {\n          itemText: workout_name,\n          isComplete: completedWorkouts[workoutIndx],\n          onClick: () => {\n            !completedWorkouts[workoutIndx] && continueToFourthStep(wo, workoutIndx, false);\n          }\n        }, workoutIndx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-5\",\n      children: /*#__PURE__*/_jsxDEV(CustButton, {\n        disabled: areWorkoutsIncomplete(),\n        onClick: () => {\n          confettiEffect();\n          setTimeout(() => {\n            // introduce a timeout in order for the confetti effect\n            // to happen + congratulate the user\n            navigate(\"/home\");\n          }, [3000]);\n        },\n        className: \"btn-lg col-8 col-sm-6 col-md-6 col-lg-6 col-xl-6\",\n        color: \"yellow\",\n        text: \"COMPLETE SESSION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectWorkout, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = SelectWorkout;\nSelectWorkout.propTypes = {\n  selectedDay: PropTypes.object,\n  next: PropTypes.func,\n  prev: PropTypes.func,\n  setSelectedDay: PropTypes.func,\n  completedWorkouts: PropTypes.arrayOf(PropTypes.bool),\n  setCompletedWorkouts: PropTypes.func,\n  setSelectedWorkout: PropTypes.func,\n  setIsCardio: PropTypes.func\n};\nvar _c;\n$RefreshReg$(_c, \"SelectWorkout\");","map":{"version":3,"names":["PropTypes","useNavigate","CustButton","WorkoutItem","BackArrow","confettiEffect","jsxDEV","_jsxDEV","CARDIO_INDEX","SelectWorkout","_ref","_s","_selectedDay$cardio","selectedDay","next","prev","setSelectedDay","completedWorkouts","setCompletedWorkouts","setSelectedWorkout","setIsCardio","navigate","returnToSecondStep","confirm","continueToFourthStep","workoutObj","index","isCardio","areWorkoutsIncomplete","i","length","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","dayTitle","cardio","name","itemText","isComplete","workouts_needed","map","wo","indx","_selectedDay$cardio2","workout_name","completeWorkoutName","workoutIndx","disabled","setTimeout","color","text","_c","propTypes","object","func","arrayOf","bool","$RefreshReg$"],"sources":["/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/steps/SelectWorkout/SelectWorkout.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { useNavigate } from \"react-router\";\n\nimport { CustButton, WorkoutItem, BackArrow } from \"../../../../components\";\nimport { confettiEffect } from \"./Confetti\";\n\nconst CARDIO_INDEX = 0;\n\nexport const SelectWorkout = ({\n  selectedDay,\n  next,\n  prev,\n  setSelectedDay,\n  completedWorkouts,\n  setCompletedWorkouts,\n  setSelectedWorkout,\n  setIsCardio,\n}) => {\n  const navigate = useNavigate();\n\n  const returnToSecondStep = () => {\n    // add alert first to make sure\n    if (confirm(\"Are you sure you want to abandon your current workout?\")) {\n      // update step, setSelectedWorkout, setCompletedWorkouts, selectedDay state\n      setSelectedDay(null);\n      setSelectedWorkout(null);\n      setCompletedWorkouts([]);\n      prev();\n    }\n  };\n\n  const continueToFourthStep = (workoutObj, index, isCardio) => {\n    // update state to denote cardio mode\n    if (isCardio) {\n      setIsCardio(true);\n    }\n    // add index attribute to workoutObj\n    workoutObj.index = index;\n    setSelectedWorkout(workoutObj);\n    next();\n  };\n\n  const areWorkoutsIncomplete = () => {\n    for (var i = 0; i < completedWorkouts.length; i++) {\n      if (!completedWorkouts[i]) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // once an workout is completed, I should disable the onClick for that WorkoutItem\n  // to avoid the error\n  return (\n    <div className=\"d-block pt-5\">\n      <BackArrow onClick={() => returnToSecondStep()} />\n      <h2 className=\"fw-bold pb-2\">{`Today's Workout`}</h2>\n      <h3 className=\"fw-bold pb-4 yellow\">{selectedDay.dayTitle}</h3>\n      <div>\n        {selectedDay?.cardio?.name && (\n          <WorkoutItem\n            key={CARDIO_INDEX}\n            itemText={selectedDay.cardio.name}\n            isComplete={completedWorkouts[CARDIO_INDEX]}\n            onClick={() => {\n              !completedWorkouts[CARDIO_INDEX] &&\n                continueToFourthStep(selectedDay.cardio, CARDIO_INDEX, true);\n            }}\n          />\n        )}\n        {selectedDay.workouts_needed.map((wo, indx) => {\n          var workout_name = wo.workout_name;\n          // append concatted workoutNames to object for next step\n          wo.completeWorkoutName = workout_name;\n          var workoutIndx = selectedDay?.cardio?.name ? indx + 1 : indx;\n          return (\n            <WorkoutItem\n              key={workoutIndx}\n              itemText={workout_name}\n              isComplete={completedWorkouts[workoutIndx]}\n              onClick={() => {\n                !completedWorkouts[workoutIndx] &&\n                  continueToFourthStep(wo, workoutIndx, false);\n              }}\n            />\n          );\n        })}\n      </div>\n      <br />\n      <div className=\"py-5\">\n        <CustButton\n          disabled={areWorkoutsIncomplete()}\n          onClick={() => {\n            confettiEffect();\n            setTimeout(() => {\n              // introduce a timeout in order for the confetti effect\n              // to happen + congratulate the user\n              navigate(\"/home\");\n            }, [3000]);\n          }}\n          className=\"btn-lg col-8 col-sm-6 col-md-6 col-lg-6 col-xl-6\"\n          color=\"yellow\"\n          text=\"COMPLETE SESSION\"\n        />\n      </div>\n    </div>\n  );\n};\n\nSelectWorkout.propTypes = {\n  selectedDay: PropTypes.object,\n  next: PropTypes.func,\n  prev: PropTypes.func,\n  setSelectedDay: PropTypes.func,\n  completedWorkouts: PropTypes.arrayOf(PropTypes.bool),\n  setCompletedWorkouts: PropTypes.func,\n  setSelectedWorkout: PropTypes.func,\n  setIsCardio: PropTypes.func,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}