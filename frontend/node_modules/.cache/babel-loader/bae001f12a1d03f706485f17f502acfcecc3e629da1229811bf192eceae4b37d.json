{"ast":null,"code":"var _jsxFileName = \"/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/steps/Rest/Rest.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport { IoArrowBackCircleSharp } from \"react-icons/io5\";\nimport { CustButton, GoalDisplay } from \"../../../../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Rest = _ref => {\n  _s();\n  let {\n    next,\n    prev,\n    selectedWorkout,\n    setSelectedWorkout,\n    completedWorkouts,\n    setCompletedWorkouts,\n    currentWorkoutSets,\n    setCurrentWorkoutSets,\n    isCardio,\n    setIsCardio\n  } = _ref;\n  useEffect(() => {\n    window.scrollTo(0, 1);\n  }, []);\n  const returnToThirdStep = () => {\n    console.log(next, prev, selectedWorkout, setSelectedWorkout, completedWorkouts, setCompletedWorkouts, currentWorkoutSets, setCurrentWorkoutSets, setIsCardio);\n    // update isCardio state to avoid errors with title\n    if (isCardio) {\n      setIsCardio(false);\n    }\n    // update selectedWorkout state var\n    setSelectedWorkout(null);\n    prev();\n  };\n  const completeWorkout = () => {\n    // update completedWorkouts state array\n    const updatedCompletedWorkouts = completedWorkouts.map((val, indx) => {\n      if (indx === selectedWorkout.index) {\n        return true;\n      }\n      return val;\n    });\n    setCompletedWorkouts(updatedCompletedWorkouts);\n    // update currentWorkoutSets\n    setCurrentWorkoutSets(0);\n    // reuse logic\n    returnToThirdStep();\n  };\n  const startSet = () => {\n    // update currentWorkoutSets\n    setCurrentWorkoutSets(currentWorkoutSets + 1);\n    // move user to next step - PerformWorkout\n    next();\n  };\n\n  // use this to disable the 'DONE' button once we reach our goal\n  const canExit = () => {\n    if (isCardio) {\n      return true;\n    }\n    if (currentWorkoutSets >= selectedWorkout.goal.sets) {\n      return true;\n    }\n    return false;\n  };\n\n  // use this to disable the 'Start Set' button once we reach our goal\n  const disableStartSetButton = () => {\n    if (isCardio) {\n      return false;\n    } else if (currentWorkoutSets >= selectedWorkout.goal.sets) {\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-block pt-5\",\n    children: [currentWorkoutSets == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => returnToThirdStep(),\n      className: \"text-start back-hover back-width pb-1\",\n      children: /*#__PURE__*/_jsxDEV(IoArrowBackCircleSharp, {\n        color: \"#EBAA28\",\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"fw-bold pb-2 pt-3\",\n      children: isCardio ? selectedWorkout.name : selectedWorkout.completeWorkoutName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoalDisplay, {\n      goal: isCardio ? selectedWorkout : selectedWorkout.goal,\n      isCardio: isCardio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Completed Sets:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"yellow\",\n        children: currentWorkoutSets\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustButton, {\n        text: \"Start Set\",\n        color: \"yellow\",\n        className: \"btn-lg mt-3 w-50\",\n        onClick: () => startSet(),\n        disabled: disableStartSetButton()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(CustButton, {\n        text: \"DONE\",\n        onClick: () => completeWorkout(),\n        color: \"yellow\",\n        className: \"mt-5 btn-lg w-75 py-2\",\n        disabled: !canExit()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Rest, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Rest;\nRest.propTypes = {\n  next: PropTypes.func,\n  prev: PropTypes.func,\n  selectedWorkout: PropTypes.object,\n  setSelectedWorkout: PropTypes.func,\n  completedWorkouts: PropTypes.array,\n  setCompletedWorkouts: PropTypes.func,\n  currentWorkoutSets: PropTypes.number,\n  setCurrentWorkoutSets: PropTypes.func,\n  isCardio: PropTypes.bool,\n  setIsCardio: PropTypes.func\n};\nvar _c;\n$RefreshReg$(_c, \"Rest\");","map":{"version":3,"names":["PropTypes","useEffect","IoArrowBackCircleSharp","CustButton","GoalDisplay","jsxDEV","_jsxDEV","Rest","_ref","_s","next","prev","selectedWorkout","setSelectedWorkout","completedWorkouts","setCompletedWorkouts","currentWorkoutSets","setCurrentWorkoutSets","isCardio","setIsCardio","window","scrollTo","returnToThirdStep","console","log","completeWorkout","updatedCompletedWorkouts","map","val","indx","index","startSet","canExit","goal","sets","disableStartSetButton","className","children","onClick","color","size","fileName","_jsxFileName","lineNumber","columnNumber","name","completeWorkoutName","text","disabled","_c","propTypes","func","object","array","number","bool","$RefreshReg$"],"sources":["/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/steps/Rest/Rest.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\nimport { IoArrowBackCircleSharp } from \"react-icons/io5\";\n\nimport { CustButton, GoalDisplay } from \"../../../../components\";\n\nexport const Rest = ({\n  next,\n  prev,\n  selectedWorkout,\n  setSelectedWorkout,\n  completedWorkouts,\n  setCompletedWorkouts,\n  currentWorkoutSets,\n  setCurrentWorkoutSets,\n  isCardio,\n  setIsCardio,\n}) => {\n  useEffect(() => {\n    window.scrollTo(0, 1);\n  }, []);\n\n  const returnToThirdStep = () => {\n    console.log(\n      next,\n      prev,\n      selectedWorkout,\n      setSelectedWorkout,\n      completedWorkouts,\n      setCompletedWorkouts,\n      currentWorkoutSets,\n      setCurrentWorkoutSets,\n      setIsCardio\n    );\n    // update isCardio state to avoid errors with title\n    if (isCardio) {\n      setIsCardio(false);\n    }\n    // update selectedWorkout state var\n    setSelectedWorkout(null);\n    prev();\n  };\n\n  const completeWorkout = () => {\n    // update completedWorkouts state array\n    const updatedCompletedWorkouts = completedWorkouts.map((val, indx) => {\n      if (indx === selectedWorkout.index) {\n        return true;\n      }\n      return val;\n    });\n    setCompletedWorkouts(updatedCompletedWorkouts);\n    // update currentWorkoutSets\n    setCurrentWorkoutSets(0);\n    // reuse logic\n    returnToThirdStep();\n  };\n\n  const startSet = () => {\n    // update currentWorkoutSets\n    setCurrentWorkoutSets(currentWorkoutSets + 1);\n    // move user to next step - PerformWorkout\n    next();\n  };\n\n  // use this to disable the 'DONE' button once we reach our goal\n  const canExit = () => {\n    if (isCardio) {\n      return true;\n    }\n    if (currentWorkoutSets >= selectedWorkout.goal.sets) {\n      return true;\n    }\n    return false;\n  };\n\n  // use this to disable the 'Start Set' button once we reach our goal\n  const disableStartSetButton = () => {\n    if (isCardio) {\n      return false;\n    } else if (currentWorkoutSets >= selectedWorkout.goal.sets) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"d-block pt-5\">\n      {currentWorkoutSets == 0 && (\n        <div\n          onClick={() => returnToThirdStep()}\n          className=\"text-start back-hover back-width pb-1\"\n        >\n          <IoArrowBackCircleSharp color=\"#EBAA28\" size={30} />\n        </div>\n      )}\n      <h2 className=\"fw-bold pb-2 pt-3\">\n        {isCardio ? selectedWorkout.name : selectedWorkout.completeWorkoutName}\n      </h2>\n      <GoalDisplay\n        goal={isCardio ? selectedWorkout : selectedWorkout.goal}\n        isCardio={isCardio}\n      />\n      <div className=\"pt-5\">\n        <h4>Completed Sets:</h4>\n        <h2 className=\"yellow\">{currentWorkoutSets}</h2>\n        <CustButton\n          text=\"Start Set\"\n          color=\"yellow\"\n          className=\"btn-lg mt-3 w-50\"\n          onClick={() => startSet()}\n          disabled={disableStartSetButton()}\n        />\n      </div>\n      <div className=\"mt-5\">\n        <CustButton\n          text=\"DONE\"\n          onClick={() => completeWorkout()}\n          color=\"yellow\"\n          className=\"mt-5 btn-lg w-75 py-2\"\n          disabled={!canExit()}\n        />\n      </div>\n    </div>\n  );\n};\n\nRest.propTypes = {\n  next: PropTypes.func,\n  prev: PropTypes.func,\n  selectedWorkout: PropTypes.object,\n  setSelectedWorkout: PropTypes.func,\n  completedWorkouts: PropTypes.array,\n  setCompletedWorkouts: PropTypes.func,\n  currentWorkoutSets: PropTypes.number,\n  setCurrentWorkoutSets: PropTypes.func,\n  isCardio: PropTypes.bool,\n  setIsCardio: PropTypes.func,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}