{"ast":null,"code":"var _jsxFileName = \"/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/components/steps/SelectProgram.jsx\";\nimport PropTypes from \"prop-types\";\nimport { Carousel, WorkoutTile } from \"./../../../../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectProgram = _ref => {\n  let {\n    myPrograms\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-block pt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"fw-bold pb-4\",\n      children: \"Select Workout Program\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n      children: myPrograms.map(program => {\n        var muscles = program.days.map(day => {\n          return day.workouts_needed.flatMap(wo => {\n            return wo.muscles_worked;\n          });\n        });\n        // extract all unique values of muscles worked out to display\n        muscles = muscles.map(group => {\n          return Array.from(new Set(group));\n        });\n        //   join every list inside muscles to make one string\n        muscles = muscles.map(group => {\n          return group.join(\", \");\n        });\n        console.log(muscles);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify\",\n          children: /*#__PURE__*/_jsxDEV(WorkoutTile, {\n            title: program.name,\n            items: muscles,\n            showEdit: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, program.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = SelectProgram;\nSelectProgram.propTypes = {\n  myPrograms: PropTypes.arrayOf(PropTypes.object)\n};\nvar _c;\n$RefreshReg$(_c, \"SelectProgram\");","map":{"version":3,"names":["PropTypes","Carousel","WorkoutTile","jsxDEV","_jsxDEV","SelectProgram","_ref","myPrograms","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","program","muscles","days","day","workouts_needed","flatMap","wo","muscles_worked","group","Array","from","Set","join","console","log","title","name","items","showEdit","id","_c","propTypes","arrayOf","object","$RefreshReg$"],"sources":["/Users/jacobolivares/Documents/practice/gym_buddy/src/routes/Workout/components/steps/SelectProgram.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\n\nimport { Carousel, WorkoutTile } from \"./../../../../components\";\n\nexport const SelectProgram = ({ myPrograms }) => {\n  return (\n    <div className=\"d-block pt-5\">\n      <h2 className=\"fw-bold pb-4\">Select Workout Program</h2>\n      <Carousel>\n        {myPrograms.map((program) => {\n          var muscles = program.days.map((day) => {\n            return day.workouts_needed.flatMap((wo) => {\n              return wo.muscles_worked;\n            });\n          });\n          // extract all unique values of muscles worked out to display\n          muscles = muscles.map((group) => {\n            return Array.from(new Set(group));\n          });\n          //   join every list inside muscles to make one string\n          muscles = muscles.map((group) => {\n            return group.join(\", \");\n          });\n          console.log(muscles);\n\n          return (\n            <div className=\"d-flex justify\" key={program.id}>\n              <WorkoutTile\n                title={program.name}\n                items={muscles}\n                showEdit={true}\n              />\n            </div>\n          );\n        })}\n      </Carousel>\n    </div>\n  );\n};\n\nSelectProgram.propTypes = {\n  myPrograms: PropTypes.arrayOf(PropTypes.object),\n};\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAElC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,OAAO,MAAMC,aAAa,GAAGC,IAAA,IAAoB;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAD,IAAA;EAC1C,oBACEF,OAAA;IAAKI,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BL,OAAA;MAAII,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACxDT,OAAA,CAACH,QAAQ;MAAAQ,QAAA,EACNF,UAAU,CAACO,GAAG,CAAEC,OAAO,IAAK;QAC3B,IAAIC,OAAO,GAAGD,OAAO,CAACE,IAAI,CAACH,GAAG,CAAEI,GAAG,IAAK;UACtC,OAAOA,GAAG,CAACC,eAAe,CAACC,OAAO,CAAEC,EAAE,IAAK;YACzC,OAAOA,EAAE,CAACC,cAAc;UAC1B,CAAC,CAAC;QACJ,CAAC,CAAC;QACF;QACAN,OAAO,GAAGA,OAAO,CAACF,GAAG,CAAES,KAAK,IAAK;UAC/B,OAAOC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACH,KAAK,CAAC,CAAC;QACnC,CAAC,CAAC;QACF;QACAP,OAAO,GAAGA,OAAO,CAACF,GAAG,CAAES,KAAK,IAAK;UAC/B,OAAOA,KAAK,CAACI,IAAI,CAAC,IAAI,CAAC;QACzB,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAACb,OAAO,CAAC;QAEpB,oBACEZ,OAAA;UAAKI,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC7BL,OAAA,CAACF,WAAW;YACV4B,KAAK,EAAEf,OAAO,CAACgB,IAAK;YACpBC,KAAK,EAAEhB,OAAQ;YACfiB,QAAQ,EAAE;UAAK;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACf,GALiCE,OAAO,CAACmB,EAAE;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAMzC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEV,CAAC;AAACsB,EAAA,GAlCW9B,aAAa;AAoC1BA,aAAa,CAAC+B,SAAS,GAAG;EACxB7B,UAAU,EAAEP,SAAS,CAACqC,OAAO,CAACrC,SAAS,CAACsC,MAAM;AAChD,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}